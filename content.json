[{"title":"","date":"2018-03-20T13:11:47.484Z","path":"2018/03/20/自己实现一个Promise方法/","text":"自己实现一个Promise方法（1）实现一个基础的Promise方法1234567891011121314151617181920212223242526272829303132function Promise(excutor) &#123; let self = this self.status = &apos;pending&apos; self.value = null self.reason = null self.onFulfilledCallbacks = [] self.onRejectedCallbacks = [] // pending状态 =&gt; fulfilled状态 function resolve(value) &#123; if (self.status === &apos;pending&apos;) &#123; self.value = value self.status = &apos;fulfilled&apos; self.onFulfilledCallbacks.forEach(item =&gt; item()) &#125; &#125; // pending状态 =&gt; reject状态 function reject(reason) &#123; if (self.status === &apos;pending&apos;) &#123; self.reason = reason self.status = &apos;rejected&apos; self.onRejectedCallbacks.forEach(item =&gt; item()) &#125; &#125; try &#123; excutor(resolve, reject) &#125; catch (err) &#123; reject(err) &#125;&#125; （2）链式调用–then()方法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051Promise.prototype.then = function (onFulfilled, onRejected) &#123; let self = this if (self.status === &apos;fulfilled&apos;) &#123; return new Promise((resolve, reject) =&gt; &#123; try &#123; let x = onFulfilled(self.value) if (x instanceof Promise) &#123; x.then(resolve, reject) &#125; else &#123; resolve(x) &#125; &#125; catch (err) &#123; reject(err) &#125; &#125;) &#125; if (self.status === &apos;rejected&apos;) &#123; return new Promise((resolve, reject) =&gt; &#123; try &#123; let x = onRejected(self.reason) if (x instanceof Promise) &#123; x.then(resolve, reject) &#125; else &#123; resolve(x) &#125; &#125; catch (err) &#123; reject(err) &#125; &#125;) &#125; if (self.status === &apos;pending&apos;) &#123; return new Promise((resolve, reject) =&gt; &#123; self.onFulfilledCallbacks.push(() =&gt; &#123; let x = onFulfilled(self.value) if (x instanceof Promise) &#123; x.then(resolve, reject) &#125; else &#123; resolve(x) &#125; &#125;) self.onRejectedCallbacks.push(() =&gt; &#123; let x = onRejected(self.reason) if (x instanceof Promise) &#123; x.then(resolve, reject) &#125; else &#123; resolve(x) &#125; &#125;) &#125;) &#125;&#125; （3）catch方法（就是then()方法的简写）123Promise.prototype.catch = function (fn) &#123; return this.then(null, fn)&#125;","tags":[]},{"title":"Hello World","date":"2018-03-13T11:34:33.709Z","path":"2018/03/13/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]